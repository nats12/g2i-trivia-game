[{"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/index.tsx":"1","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/reportWebVitals.ts":"2","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/App.tsx":"3","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/theme/colours.tsx":"4","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/reducers/index.tsx":"5","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/screens/Quiz.tsx":"6","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/screens/Home.tsx":"7","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/screens/Results.tsx":"8","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/reducers/questions.tsx":"9","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/StyledLoader.tsx":"10","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/CentredContainer.tsx":"11","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/actions/questions.tsx":"12","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/ScreenHeading.tsx":"13","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/ScreenContainer.tsx":"14","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/HalfCircleBackground.tsx":"15","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/Button.tsx":"16","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/QuestionCard.tsx":"17","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/ScreenHeadings.tsx":"18","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/models/Question.tsx":"19","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/actions/error.tsx":"20","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/Error.tsx":"21","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/reducers/error.tsx":"22"},{"size":804,"mtime":1607251576213,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607090206135,"results":"25","hashOfConfig":"24"},{"size":1164,"mtime":1607251576211,"results":"26","hashOfConfig":"24"},{"size":88,"mtime":1607244122252,"results":"27","hashOfConfig":"24"},{"size":256,"mtime":1607251576214,"results":"28","hashOfConfig":"24"},{"size":4323,"mtime":1607251576212,"results":"29","hashOfConfig":"24"},{"size":2540,"mtime":1607251576212,"results":"30","hashOfConfig":"24"},{"size":135,"mtime":1607203437607,"results":"31","hashOfConfig":"24"},{"size":979,"mtime":1607244122251,"results":"32","hashOfConfig":"24"},{"size":263,"mtime":1607185970005,"results":"33","hashOfConfig":"24"},{"size":198,"mtime":1607251576213,"results":"34","hashOfConfig":"24"},{"size":1968,"mtime":1607251576215,"results":"35","hashOfConfig":"24"},{"size":166,"mtime":1607185970010,"results":"36","hashOfConfig":"24"},{"size":272,"mtime":1607185970009,"results":"37","hashOfConfig":"24"},{"size":279,"mtime":1607185970009,"results":"38","hashOfConfig":"24"},{"size":766,"mtime":1607244122246,"results":"39","hashOfConfig":"24"},{"size":370,"mtime":1607244122248,"results":"40","hashOfConfig":"24"},{"size":188,"mtime":1607244122248,"results":"41","hashOfConfig":"24"},{"size":567,"mtime":1607244122250,"results":"42","hashOfConfig":"24"},{"size":172,"mtime":1607251576214,"results":"43","hashOfConfig":"24"},{"size":451,"mtime":1607251576211,"results":"44","hashOfConfig":"24"},{"size":443,"mtime":1607251576215,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tu9pfg",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/index.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/reportWebVitals.ts",[],["96","97"],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/App.tsx",["98","99"],"import React, { useCallback, useEffect } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport * as questionsActions from \"../store/actions/questions\";\nimport \"../App.css\";\nimport Home from \"./screens/Home\";\nimport Quiz from \"./screens/Quiz\";\nimport Results from \"./screens/Results\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IQuestionsState } from \"../interfaces/StateInterfaces\";\n\nfunction App() {\n  const history = createBrowserHistory();\n\n  const dispatch = useDispatch();\n\n  const fetchQuestions = useCallback(() => {\n    try {\n      dispatch(questionsActions.fetch());\n    } catch (err) {\n      console.log(err);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchQuestions();\n  }, [fetchQuestions]);\n\n  return (\n    <Router history={history} data-test=\"component-app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/quiz\">\n          <Quiz />\n        </Route>\n        <Route exact path=\"/results\">\n          <Results />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/theme/colours.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/reducers/index.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/screens/Quiz.tsx",["100","101","102","103","104"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { connect, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport * as questionsActions from \"../../store/actions/questions\";\nimport { colours } from \"../../theme/colours\";\nimport { IQuestionsState } from \"../../interfaces/StateInterfaces\";\nimport { StyledButton } from \"../styled/Button\";\nimport { CentredContainer } from \"../styled/CentredContainer\";\nimport QuestionCard from \"../styled/QuestionCard\";\nimport { ScreenContainer } from \"../styled/ScreenContainer\";\nimport { StyledH2 } from \"../styled/ScreenHeadings\";\nimport StyledLoader from \"../StyledLoader\";\nimport Question from \"../../models/Question\";\nimport { Error } from \"../Error\";\n\nconst QuizInnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n\n  .card {\n    width: 100% !important;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst CardContainer = styled.div`\n  min-height: 300px;\n  max-height: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Quiz = ({\n  questions,\n  currentQuestion,\n  updateCurrentQuestion,\n  updateResults,\n  results,\n  error,\n}: any = []) => {\n  if (error !== null && error !== \"\") {\n    return (\n      <CentredContainer data-test=\"component-error\">\n        <Error>{error}</Error>\n      </CentredContainer>\n    );\n  }\n\n  if (questions.length === 0 && error === null) {\n    return (\n      <CentredContainer>\n        <StyledLoader data-test=\"component-loading\" />\n      </CentredContainer>\n    );\n  }\n\n  const nextQuestion = (question: Question, answer: string) => {\n    updateCurrentQuestion();\n    updateResults(question.id, question.text, question.correct_answer, answer);\n  };\n\n  return (\n    <ScreenContainer data-test=\"component-quiz\">\n      <Container>\n        <Row xs={12}>\n          <Col>\n            <QuizInnerContainer>\n              {currentQuestion > questions.length - 1 ? (\n                \"test\"\n              ) : (\n                <>\n                  <StyledH2>{questions[currentQuestion]?.category}</StyledH2>\n                  <CardContainer>\n                    <QuestionCard\n                      key={currentQuestion}\n                      questionNumber={currentQuestion}\n                    >\n                      {questions[currentQuestion]?.text}\n                    </QuestionCard>\n                  </CardContainer>\n                  <ButtonsContainer>\n                    <StyledButton\n                      onClick={() =>\n                        nextQuestion(questions[currentQuestion], \"True\")\n                      }\n                      border={colours.green}\n                      backgroundColour={colours.green}\n                    >\n                      True\n                    </StyledButton>\n                    <StyledButton\n                      onClick={() =>\n                        nextQuestion(questions[currentQuestion], \"False\")\n                      }\n                      border={colours.red}\n                      backgroundColour={colours.red}\n                    >\n                      False\n                    </StyledButton>\n                  </ButtonsContainer>\n                </>\n              )}\n            </QuizInnerContainer>\n          </Col>\n        </Row>\n      </Container>\n    </ScreenContainer>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  questions: state.questions.questions,\n  currentQuestion: state.questions.currentQuestion,\n  results: state.questions.results,\n  error: state.errors.error,\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    updateCurrentQuestion: (id: number) => {\n      dispatch(questionsActions.updateCurrentQuestion());\n    },\n    updateResults: (\n      id: number,\n      question: string,\n      correct_answer: string,\n      given_answer: string\n    ) => {\n      dispatch(\n        questionsActions.updateResults(\n          id,\n          question,\n          correct_answer,\n          given_answer\n        )\n      );\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/screens/Home.tsx",["105","106","107","108","109"],"import React, { useCallback, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\n\nimport * as questionsActions from \"../../store/actions/questions\";\nimport { ScreenContainer } from \"../styled/ScreenContainer\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { ScreenHeading } from \"../styled/ScreenHeading\";\nimport styled from \"styled-components\";\nimport { StyledButton } from \"../styled/Button\";\nimport { colours } from \"../../theme/colours\";\nimport { HalfCircleBackground } from \"../styled/HalfCircleBackground\";\nimport StyledLoader from \"../StyledLoader\";\nimport { CentredContainer } from \"../styled/CentredContainer\";\nimport { Link } from \"react-router-dom\";\nimport { IQuestionsState } from \"../../interfaces/StateInterfaces\";\nimport { Error } from \"../Error\";\n\nconst HomeTopContainer = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  justify-content: space-between;\n  height: 65vh;\n`;\nconst HomeBottomContainer = styled.div`\n  height: 35vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  overflow: hidden;\n`;\n\nexport const Home = ({ questions, error }: any = []) => {\n  if (error !== null && error !== \"\") {\n    return (\n      <CentredContainer data-test=\"component-error\">\n        <Error>{error}</Error>\n      </CentredContainer>\n    );\n  }\n\n  if (questions.length === 0) {\n    return (\n      <CentredContainer>\n        <StyledLoader data-test=\"component-loading\" />\n      </CentredContainer>\n    );\n  }\n\n  return (\n    <ScreenContainer data-test=\"component-home\">\n      <Container>\n        <Row xs={12}>\n          <Col>\n            <HomeTopContainer>\n              <ScreenHeading>Welcome to the Trivia Challenge!</ScreenHeading>\n              <h2>You will be presented with 10 True or False questions.</h2>\n              <h2>Can you score 100%?</h2>\n            </HomeTopContainer>\n            <HomeBottomContainer>\n              <HalfCircleBackground>\n                <StyledButton backgroundColour={colours.primary}>\n                  <Link to=\"/quiz\">Begin</Link>\n                </StyledButton>\n              </HalfCircleBackground>\n            </HomeBottomContainer>\n          </Col>\n        </Row>\n      </Container>\n    </ScreenContainer>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  questions: state.questions.questions,\n  error: state.errors.error,\n});\n\nexport default connect(mapStateToProps)(Home);\n","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/screens/Results.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/reducers/questions.tsx",["110"],"import { Action } from \"history\";\nimport { IQuestionsState } from \"../../interfaces/StateInterfaces\";\nimport { actionTypes } from \"../actions/questions\";\n\nconst initialState: IQuestionsState = {\n  questions: [],\n  currentQuestion: 0,\n  results: [],\n};\n\ntype IAction = {\n  type: string;\n  payload: any;\n};\n\nexport const questionsReducer = (\n  state: IQuestionsState = initialState,\n  action: IAction\n) => {\n  switch (action.type) {\n    case actionTypes.FETCH_QUESTIONS:\n      return {\n        ...state,\n        questions: action.payload,\n      };\n    case actionTypes.UPDATE_CURRENT_QUESTION:\n      return {\n        ...state,\n        questions: state.questions,\n        currentQuestion: state.currentQuestion + 1,\n      };\n    case actionTypes.UPDATE_RESULTS:\n      const results: {}[] = [...state.results];\n      results.push(action.payload);\n\n      return {\n        ...state,\n        questions: state.questions,\n        results,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/StyledLoader.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/CentredContainer.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/actions/questions.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/ScreenHeading.tsx",["111"],"import styled from \"styled-components\";\nimport { devices } from \"../../theme/devices\";\n\nexport const ScreenHeading = styled.h1`\n\n    color: white;\n    padding: 0 50px;\n    \n`;","/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/ScreenContainer.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/HalfCircleBackground.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/Button.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/QuestionCard.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/styled/ScreenHeadings.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/models/Question.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/actions/error.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/components/Error.tsx",[],"/Users/nataliemclaren/Sites/g2i-trivia-game-challenge/src/store/reducers/error.tsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":10,"column":23,"nodeType":"118","messageId":"119","endLine":10,"endColumn":34},{"ruleId":"116","severity":1,"message":"120","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":25},{"ruleId":"116","severity":1,"message":"121","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":28},{"ruleId":"116","severity":1,"message":"122","line":1,"column":30,"nodeType":"118","messageId":"119","endLine":1,"endColumn":39},{"ruleId":"116","severity":1,"message":"123","line":1,"column":41,"nodeType":"118","messageId":"119","endLine":1,"endColumn":49},{"ruleId":"116","severity":1,"message":"124","line":3,"column":19,"nodeType":"118","messageId":"119","endLine":3,"endColumn":30},{"ruleId":"116","severity":1,"message":"120","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":25},{"ruleId":"116","severity":1,"message":"121","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":28},{"ruleId":"116","severity":1,"message":"122","line":1,"column":30,"nodeType":"118","messageId":"119","endLine":1,"endColumn":39},{"ruleId":"116","severity":1,"message":"124","line":2,"column":19,"nodeType":"118","messageId":"119","endLine":2,"endColumn":30},{"ruleId":"116","severity":1,"message":"125","line":4,"column":13,"nodeType":"118","messageId":"119","endLine":4,"endColumn":29},{"ruleId":"116","severity":1,"message":"120","line":17,"column":10,"nodeType":"118","messageId":"119","endLine":17,"endColumn":25},{"ruleId":"116","severity":1,"message":"126","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":16},{"ruleId":"116","severity":1,"message":"127","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'IQuestionsState' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'questionsActions' is defined but never used.","'Action' is defined but never used.","'devices' is defined but never used.","no-global-assign","no-unsafe-negation"]